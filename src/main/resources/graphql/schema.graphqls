type Role {
  id: String!
  name: String!
  description: String!
}

type User {
  id: String!
  name: String!
  email: String!
  password: String!
  role: Role!
}

type Service {
  id: String!
  name: String!
  description: String!
}

type Room {
  id: String!
  nroRoom: String!
  status: String!
  nroBed: Int!
  nroPersons: Int!
  size: String!
  price: Float!
  description: String!
  type: String!
  view: String!
}

type RoomService {
  id: String!
  service: Service!
  room: Room!
}

input CreateUserDto {
  name: String!
  email: String!
  password: String!
  role: String!
}

input CreateServiceDto {
  name: String!
  description: String!
}

input UpdateServiceDto {
  name: String
  description: String
}

input CreateRoleDto {
  name: String!
  description: String!
}

input UpdateRoleDto {
  name: String
  description: String
}

input UpdateUserDto {
  name: String
  email: String
  password: String
  role: String
}

input CreateRoomDto {
  nroRoom: String!
  status: String!
  nroBed: Int!
  nroPersons: Int!
  size: String!
  price: Float!
  description: String!
  type: String!
  view: String!
}

input UpdateRoomDto {
  nroRoom: String
  status: String
  nroBed: Int
  nroPersons: Int
  size: String
  price: Float
  description: String
  type: String
  view: String
}

input CreateRoomServiceDto {
  service: String!
  room: String!
}

input UpdateRoomServiceDto {
  service: String
  room: String
}

type Query {
  getOneUser(id: String!): User
  getAllUsers: [User]
  getOneRole(id: String!): Role
  getAllRoles: [Role]
  getOneService(id: String!): Service
  getAllServices: [Service]
  getOneRoom(id: String!): Room
  getAllRooms: [Room]
  getAllRoomsBy(attr: String!, value: String!): [Room]
  getServicesByRoom(id: String!): [RoomService]
}

type Mutation {
  createUser(createUserDto: CreateUserDto!): User
  updateUser(id: String!, updateUserDto: UpdateUserDto!): User
  createRole(createRoleDto: CreateRoleDto!): Role
  updateRole(id: String!, updateRoleDto: UpdateRoleDto!): Role
  createService(createServiceDto: CreateServiceDto!): Service
  updateService(id: String!, updateServiceDto: UpdateServiceDto!): Service
  createRoom(createRoomDto: CreateRoomDto!): Room
  updateRoom(id: String!, updateRoomDto: UpdateRoomDto!): Room
  addServices(createRoomServiceDto: CreateRoomServiceDto!): RoomService
}
